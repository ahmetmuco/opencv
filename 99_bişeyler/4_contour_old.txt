# -*- coding: utf-8 -*-
import numpy as np
import cv2

# Blue
lower_blue = np.array([90,50,80])
upper_blue = np.array([130,255,255])

# 0-10 Red
lower_red0 = np.array([0,0,55])
upper_red0 = np.array([180,135,255])
# 170-180 Red
lower_red1 = np.array([170,50,50])
upper_red1 = np.array([180,255,255])

# Kernel 3x3
kernel_3 = np.ones([3,3],dtype=np.uint8)
# Kernel 5x5
kernel_5 = np.ones([5,5],dtype=np.uint8)
# Kernel 7x7
kernel_7 = np.ones([7,7],dtype=np.uint8)
# Kernel 9x9
kernel_9 = np.ones([9,9],dtype=np.uint8)

kernel_ellipse = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(7,7))
kernel_rectangular = cv2.getStructuringElement(cv2.MORPH_RECT,(7,7))

# Original image
img = cv2.imread('001000074.jpg',1)

# Convert to HSV color space
hsv = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)

# Masks
mask_blue = cv2.inRange(hsv,lower_blue,upper_blue)
mask_red_lower = cv2.inRange(hsv,lower_red0,upper_red0)
# mask_red_upper = cv2.inRange(hsv,lower_red1,upper_red1)
# mask_red = cv2.add(mask_red_lower,mask_red_upper)

# Morphology
# Blue mask
# closing_blue = cv2.morphologyEx(mask_blue,cv2.MORPH_CLOSE,kernel)
opening_blue = cv2.morphologyEx(mask_blue,cv2.MORPH_OPEN,kernel_5)
dilation_blue = cv2.dilate(opening_blue,kernel=kernel_5,iterations=1)
# Red mask
# closing_red_deneme = cv2.morphologyEx(mask_red_lower,cv2.MORPH_CLOSE,kernel_5)
median_red = cv2.medianBlur(mask_red_lower,9)
closing_red = cv2.morphologyEx(median_red,cv2.MORPH_CLOSE,kernel_5)
opening_red = cv2.morphologyEx(closing_red,cv2.MORPH_OPEN,kernel_5)
dilation_red = cv2.dilate(opening_red,kernel=kernel_7,iterations=1)
"""
opening_red = cv2.morphologyEx(mask_red,cv2.MORPH_OPEN,kernel_5)
median_red_opening_sonrasi = cv2.medianBlur(opening_red,7)
# median_red_opening_sonrasi = cv2.morphologyEx(median_red_opening_sonrasi,cv2.MORPH_OPEN,kernel_3)
# closing_red = cv2.morphologyEx(median_red_opening_sonrasi,cv2.MORPH_CLOSE,kernel_7)
dilation_red = cv2.dilate(median_red_opening_sonrasi,kernel=kernel_5,iterations=1)
# median_red = cv2.medianBlur(dilation_red,7)
# median_red_deneme = cv2.morphologyEx(median_red,cv2.MORPH_OPEN,kernel_7)
"""
# Contour blue
ret,thresh = cv2.threshold(dilation_blue,127,255,0)
contours, hierarchy = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
img = cv2.drawContours(img, contours, -1, (0,255,0), 3)

# Contour red
ret,thresh = cv2.threshold(dilation_red,127,255,0)
contours, hierarchy = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
img = cv2.drawContours(img, contours, -1, (0,255,0), 3)

# Only blue
result_blue = cv2.bitwise_and(img,img,mask=dilation_blue)
# Only red
result_red = cv2.bitwise_and(img,img,mask=dilation_red)

# Final image
result = cv2.add(result_blue,result_red)

cv2.imshow('img',img)
cv2.imshow('mask_blue',mask_blue)
cv2.imshow('opening_blue',opening_blue)
cv2.imshow('dilation_blue',dilation_blue)
cv2.imshow('mask_red_lower',mask_red_lower)
# cv2.imshow('closing_red_deneme',closing_red_deneme)
cv2.imshow('median_red',median_red)
cv2.imshow('closing_red',closing_red)
cv2.imshow('opening_red',opening_red)
cv2.imshow('dilation_red',dilation_red)
# cv2.imshow('median_red_opening_sonrasi',median_red_opening_sonrasi)
# cv2.imshow('median_red_deneme',median_red_deneme)
# cv2.imshow('closing_blue',closing_blue)
cv2.imshow('result_blue',result_blue)
cv2.imshow('result_red',result_red)
cv2.imshow('result',result)

cv2.waitKey(0)
cv2.destroyAllWindows()
